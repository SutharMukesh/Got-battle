{"version":3,"sources":["components/searchbar.jsx","actions/searchbar.js","actions/battlecards.js","components/battletable.jsx","components/home.jsx","reducer/searchbar.js","reducer/battlecards.js","reducer/index.js","store.js","App.js","index.js"],"names":["SearchBar","getSuggestions","value","id","escapedValue","trim","replace","regex","RegExp","props","setSuggestions","backenddata","filter","location","test","onChange","event","newValue","method","target","onSubmitBattleData","preventDefault","querydata","locationid","region","regionid","year","yearid","name","battlenameid","queryparams","Object","keys","map","key","encodeURIComponent","item","join","setBattlesData","this","setBackendData","className","onSubmit","suggestions","suggestion","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","renderSuggestion","inputProps","placeholder","type","Component","connect","state","searchbar","dispatch","a","backenddataurl","axios","get","process","response","payload","data","alert","console","error","query","BattleCards","battles","colname","scope","battle","style","width","Home","length","battlecards","initialState","combineReducers","action","middleware","thunk","createStore","mainReducer","compose","applyMiddleware","App","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4300d04f.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setBackendData, onChange, setSuggestions } from \"../actions/searchbar\";\r\nimport { setBattlesData } from \"../actions/battlecards\";\r\nimport Autosuggest from \"react-autosuggest\";\r\n\r\nclass SearchBar extends Component {\r\n  async componentDidMount() {\r\n    // Fetch required unique data list for autocomplete suggestion\r\n    this.props.setBackendData(\"locationid\");\r\n    this.props.setBackendData(\"battlenameid\");\r\n    this.props.setBackendData(\"regionid\");\r\n  }\r\n\r\n  /**\r\n   * Get list of suggestion when typed into input fields\r\n   * here input fields are differentiate with id.\r\n   * @param {String} value\r\n   * @param {String} id\r\n   * @returns Sets unique set of suggestions for given id\r\n   */\r\n  getSuggestions = (value, id) => {\r\n    const escapedValue = value.trim().replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    if (escapedValue === \"\") return [];\r\n\r\n    const regex = new RegExp(escapedValue, \"i\");\r\n    this.props.setSuggestions(\r\n      this.props[id].backenddata.filter(location => regex.test(location)),\r\n      id\r\n    );\r\n  };\r\n\r\n  onChange = (event, { newValue, method }) => {\r\n    this.props.onChange(newValue, event.target.id);\r\n  };\r\n\r\n  onSubmitBattleData = event => {\r\n    event.preventDefault();\r\n    debugger;\r\n    const querydata = {\r\n      location: event.target.locationid.value,\r\n      region: event.target.regionid.value,\r\n      year: event.target.yearid.value,\r\n      name: event.target.battlenameid.value\r\n    };\r\n    const queryparams = Object.keys(querydata)\r\n      .map(key => {\r\n        if (querydata[key])\r\n          return `${encodeURIComponent(key)}=${encodeURIComponent(\r\n            querydata[key]\r\n          )}`;\r\n      })\r\n      .filter(item => item)\r\n      .join(\"&\");\r\n    this.props.setBattlesData(queryparams);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <form\r\n          className=\"card shadow-sm d-flex flex-column needs-validation\"\r\n          onSubmit={this.onSubmitBattleData}\r\n        >\r\n          <div className=\"mt-3 d-flex row no-gutters mx-md-5 mx-2 flex-wrap justify-content-center\">\r\n            <div className=\"form-group col-md mx-2 \">\r\n              <Autosuggest\r\n                suggestions={this.props.locationid.suggestion}\r\n                onSuggestionsFetchRequested={({ event, value }) => {\r\n                  this.getSuggestions(value, \"locationid\");\r\n                }}\r\n                onSuggestionsClearRequested={() => {\r\n                  this.props.setSuggestions([], \"locationid\");\r\n                }}\r\n                getSuggestionValue={suggestion => suggestion}\r\n                renderSuggestion={suggestion => (\r\n                  <div id=\"locationid\" className=\"p-2\">\r\n                    {suggestion}\r\n                  </div>\r\n                )}\r\n                inputProps={{\r\n                  placeholder: \"Location\",\r\n                  id: \"locationid\",\r\n                  value: this.props.locationid.value,\r\n                  className: \"form-control\",\r\n                  onChange: this.onChange\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-group col-md mx-2 \">\r\n              <Autosuggest\r\n                suggestions={this.props.battlenameid.suggestion}\r\n                onSuggestionsFetchRequested={({ event, value }) => {\r\n                  this.getSuggestions(value, \"battlenameid\");\r\n                }}\r\n                onSuggestionsClearRequested={() => {\r\n                  this.props.setSuggestions([], \"battlenameid\");\r\n                }}\r\n                getSuggestionValue={suggestion => suggestion}\r\n                renderSuggestion={suggestion => (\r\n                  <div id=\"battlenameid\" className=\"p-2\">\r\n                    {suggestion}\r\n                  </div>\r\n                )}\r\n                inputProps={{\r\n                  placeholder: \"Battle Name\",\r\n                  id: \"battlenameid\",\r\n                  value: this.props.battlenameid.value,\r\n                  className: \"form-control\",\r\n                  onChange: this.onChange\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-group col-md mx-2 \">\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"yearid\"\r\n                placeholder=\"Year\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group col-md mx-2 \">\r\n              <Autosuggest\r\n                suggestions={this.props.regionid.suggestion}\r\n                onSuggestionsFetchRequested={({ event, value }) => {\r\n                  this.getSuggestions(value, \"regionid\");\r\n                }}\r\n                onSuggestionsClearRequested={() => {\r\n                  this.props.setSuggestions([], \"regionid\");\r\n                }}\r\n                getSuggestionValue={suggestion => suggestion}\r\n                renderSuggestion={suggestion => (\r\n                  <div id=\"regionid\" className=\"p-2\">\r\n                    {suggestion}\r\n                  </div>\r\n                )}\r\n                inputProps={{\r\n                  placeholder: \"Region\",\r\n                  id: \"regionid\",\r\n                  value: this.props.regionid.value,\r\n                  className: \"form-control\",\r\n                  onChange: this.onChange\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <button className=\" btn btn-primary btn-sm w-25 mb-3\">Search</button>\r\n          </div>\r\n        </form>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  locationid: state.searchbar.locationid,\r\n  battlenameid: state.searchbar.battlenameid,\r\n  regionid: state.searchbar.regionid\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  setBackendData,\r\n  onChange,\r\n  setSuggestions,\r\n  setBattlesData\r\n})(SearchBar);\r\n","import axios from \"axios\";\r\n\r\nexport function onChange(value, id) {\r\n  return async function(dispatch) {\r\n    // debugger;\r\n    dispatch({\r\n      type: \"ON_CHANGE\",\r\n      id,\r\n      payload: value\r\n    });\r\n  };\r\n}\r\n\r\nexport function setSuggestions(value, id) {\r\n  return async function(dispatch) {\r\n    // debugger;\r\n    dispatch({\r\n      type: \"SET_SUGGESTIONS\",\r\n      id,\r\n      payload: value\r\n    });\r\n  };\r\n}\r\nexport function setBackendData(id) {\r\n  return async function(dispatch) {\r\n    try {\r\n      let backenddataurl = {\r\n        \"locationid\":\"/location\",\r\n        \"battlenameid\":\"/name\",\r\n        \"regionid\":\"/region\"\r\n      };\r\n      \r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/list${backenddataurl[id]}`\r\n      );\r\n      dispatch({\r\n        type: \"SET_BACKENDDATA\",\r\n        id,\r\n        payload: response.data\r\n      });\r\n    } catch (error) {\r\n      alert(error);\r\n      console.error(error);\r\n    }\r\n  };\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport function setBattlesData(query) {\r\n  return async function(dispatch) {\r\n    try {\r\n      debugger;\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/search/?${query}`\r\n      );\r\n      dispatch({\r\n        type: \"SET_BATTLES\",\r\n        payload: response.data\r\n      });\r\n    } catch (error) {\r\n      alert(error);\r\n      console.error(error);\r\n    }\r\n  };\r\n}\r\n","/* eslint-disable linebreak-style */\r\nimport React from \"react\";\r\n\r\nexport default function BattleCards(props) {\r\n  return (\r\n    <div className=\"card mt-3 shadow-sm table-responsive\">\r\n      <table className=\"table table-sm table-striped table-hover\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            {Object.keys(props.battles[0]).map(colname => (\r\n              <th scope=\"col\" className=\"table-head\">\r\n                {colname}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.battles.map(battle => (\r\n            <tr>\r\n              {Object.keys(battle).map(key => (\r\n                <td style={{ width: \"1px\", \"white-space\": \"nowrap\" }}>\r\n                  {battle[key]}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable linebreak-style */\r\nimport React, { Component } from \"react\";\r\nimport SearchBar from \"./searchbar\";\r\nimport BattleCards from \"./battletable\";\r\nimport { connect } from \"react-redux\";\r\n\r\n/**\r\n * Home Component\r\n *\r\n * @returns {object} component which has child components\r\n */\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container d-flex flex-column\">\r\n        <div className=\"headtitle align-self-center my-3\">\r\n          <h4>BATTLES OF GOT</h4>\r\n        </div>\r\n        <SearchBar />\r\n        {this.props.battles.length > 0 ? (\r\n          <BattleCards battles={this.props.battles} />\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  battles: state.battlecards.battles\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","// import { FETCH_LOCATION, LOADING_STATE } from \"../actions/types\";\r\nconst initialState = {\r\n  locationid: {\r\n    backenddata: [],\r\n    value: \"\",\r\n    suggestion: []\r\n  },\r\n  battlenameid: {\r\n    backenddata: [],\r\n    value: \"\",\r\n    suggestion: []\r\n  },\r\n  regionid: {\r\n    backenddata: [],\r\n    value: \"\",\r\n    suggestion: []\r\n  }\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"ON_CHANGE\":\r\n      // debugger;\r\n      state[action.id].value = action.payload;\r\n      return { ...state, [action.id]: { ...state[action.id] } };\r\n    case \"SET_BACKENDDATA\":\r\n      state[action.id].backenddata = action.payload;\r\n      return { ...state, [action.id]: { ...state[action.id] } };\r\n    case \"SET_SUGGESTIONS\":\r\n      // debugger;\r\n      state[action.id].suggestion = action.payload;\r\n      return { ...state, [action.id]: { ...state[action.id] } };\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n","// import { FETCH_LOCATION, LOADING_STATE } from \"../actions/types\";\r\nconst initialState = {\r\n  battles: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"SET_BATTLES\":\r\n      debugger;\r\n      state.battles = action.payload;\r\n      return { ...state };\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport searchbar from \"./searchbar\";\r\nimport battlecards from \"./battlecards\";\r\n\r\nexport default combineReducers({\r\n  searchbar,\r\n  battlecards\r\n});\r\n","import {createStore,applyMiddleware,compose} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport mainReducer from './reducer';\r\n\r\nconst initialstate={};\r\nconst middleware = [thunk]\r\n\r\nexport default createStore(\r\n  mainReducer,\r\n  initialstate,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);","import React from \"react\";\nimport Home from \"./components/home\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"container\">\n        <Home />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/main.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}